{"version":3,"file":"friends.js","sources":["../../../../../server/routes/api/user/friends.ts"],"sourcesContent":["import { Request, Response, Router } from \"express\";\nimport { Types } from \"mongoose\";\nconst { ObjectId } = Types;\nimport User, { IUser } from \"../../../../db/models/user\";\nimport { withAuth } from \"../authMiddleware\";\n\nconst router: Router = Router();\n\nrouter.get(\"/\", withAuth, async (req: Request, res: Response) => {\n  //Get the logged in user and validate that the user exists\n  const user: IUser | null = await User.findOne({ _id: req.session.user!._id });\n  if (!user) {\n    return res.json({\n      success: false,\n      message: \"Logged in user not found?\",\n    });\n  }\n\n  //Populate the friends of the user\n  const userWithFriends = await user.populateFriends();\n  const jsonUser = userWithFriends.toJSON();\n\n  //Update the session data of the logged in user\n  req.session.user = jsonUser;\n  req.session.save();\n  return res.json({\n    success: true,\n    message: \"Friends retrieved\",\n    user: jsonUser,\n  });\n});\n\nrouter.get(\"/:id\", withAuth, async (req: Request, res: Response) => {\n  //Get the user by the id in the url\n  const user: IUser | null = await User.findOne({ _id: req.params.id });\n  if (!user) {\n    return res.json({\n      success: false,\n      message: \"User not found\",\n    });\n  }\n\n  //Populate the friends of the user\n  const userWithFriends = await user.populateFriends();\n  const jsonUser = userWithFriends.toJSON();\n  return res.json({\n    success: true,\n    message: \"Friends retrieved\",\n    user: jsonUser,\n  });\n});\n\nrouter.post(\"/\", withAuth, async (req: Request, res: Response) => {\n  const { username, uid }: { username: string; uid: string } = req.body;\n\n  //Verify uid is valid\n  if (uid && !ObjectId.isValid(uid)) {\n    return res.json({ success: false, message: \"Invalid uid\" });\n  }\n\n  //Make sure request came with either a username or a uid\n  if (!username && !uid)\n    return res.json({\n      success: false,\n      message: \"Username or uid required\",\n    });\n\n  //Find a user by either username or id and validate that the user exists\n  const foundUser: IUser | null =\n    (await User.findOne({ username })) || (await User.findOne({ _id: uid }));\n  if (!foundUser) {\n    return res.json({\n      success: false,\n      message: \"User not found\",\n    });\n  }\n\n  //Ensure the user is adding a different person as a friend\n  if (foundUser._id === req.session.user!._id) {\n    return res.json({\n      success: false,\n      message: \"You can't add yourself as a friend\",\n    });\n  }\n\n  //Get the logged in user and validate that the user exists, req.session.user is defined in withAuth I don't love !\n  //but no other way to my knowledge to say this is defined in the previous function?\n  const user: IUser | null = await User.findOne({ _id: req.session.user!._id });\n  if (!user) {\n    return res.json({\n      success: false,\n      message: \"Logged in user not found?\",\n    });\n  }\n\n  //If the logged in user already has the user as a friend\n  if (user.friends.includes(foundUser._id)) {\n    return res.json({\n      success: false,\n      message: `User ${foundUser.username} is already a friend of ${user.username}`,\n    });\n  }\n  //Otherwise add user as a friend\n  else {\n    //This will be defined, but has to be marked as IUser | null otherwise type errors\n    const updatedUser: IUser | null = await User.findOneAndUpdate(\n      { _id: user._id },\n      {\n        $push: { friends: foundUser._id },\n      },\n      { returnDocument: \"after\" }\n    );\n\n    //Validate, just in case, should never hit this (to my knowledge?)\n    if (!updatedUser)\n      return res.json({\n        success: false,\n        message: \"Somehow, error adding friend\",\n      });\n\n    //Remove password from user\n    const userWithFriends = await updatedUser.populateFriends();\n    const jsonUser = userWithFriends.toJSON();\n\n    //Update the session data of the logged in user\n    req.session.user = jsonUser;\n    req.session.save();\n    return res.json({\n      success: true,\n      message: \"User added as friend\",\n      user: jsonUser,\n    });\n  }\n});\n\nrouter.delete(\"/\", withAuth, async (req: Request, res: Response) => {\n  //Basically the same as above, just some slight modifications in the logic\n  const { username, uid }: { username: string; uid: string } = req.body;\n\n  if (uid && !ObjectId.isValid(uid)) {\n    return res.json({ success: false, message: \"Invalid uid\" });\n  }\n\n  if (!username && !uid)\n    return res.json({\n      success: false,\n      message: \"Username or uid required\",\n    });\n\n  const foundUser: IUser | null =\n    (await User.findOne({ username })) || (await User.findOne({ _id: uid }));\n  if (!foundUser) {\n    return res.json({\n      success: false,\n      message: \"User not found\",\n    });\n  }\n\n  const user: IUser | null = await User.findOne({ _id: req.session.user!._id });\n  if (!user) {\n    return res.json({\n      success: false,\n      message: \"Logged in user not found?\",\n    });\n  }\n\n  if (!user.friends.includes(foundUser._id)) {\n    return res.json({\n      success: false,\n      message: `User ${foundUser.username} is not a friend of ${user.username}`,\n    });\n  } else {\n    const updatedUser: IUser | null = await User.findOneAndUpdate(\n      { _id: user._id },\n      {\n        $pull: { friends: foundUser._id },\n      },\n      { returnDocument: \"after\" }\n    );\n\n    if (!updatedUser)\n      return res.json({\n        success: false,\n        message: \"Somehow, error deleting friend\",\n      });\n\n    const userWithFriends = await updatedUser.populateFriends();\n    const jsonUser = userWithFriends.toJSON();\n\n    req.session.user = jsonUser;\n    req.session.save;\n    return res.json({\n      success: true,\n      message: \"User removed as friend\",\n      user: jsonUser,\n    });\n  }\n});\n\nexport default router;\n"],"names":[],"mappings":"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"}