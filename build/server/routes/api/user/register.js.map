{"version":3,"file":"register.js","sources":["../../../../../server/routes/api/user/register.ts"],"sourcesContent":["import { Router, Request, Response } from \"express\";\nimport User from \"../../../../db/models/user\";\n\nconst router: Router = Router();\n\nrouter.post(\"/\", async (req: Request, res: Response) => {\n  const { username, email, password } = req.body;\n\n  if (!username || !email || !password) {\n    return res.json({\n      success: false,\n      message: \"Username, email and password are required\",\n    });\n  }\n\n  const foundUser =\n    (await User.findOne({ username })) || (await User.findOne({ email }));\n\n  if (foundUser) {\n    return res.json({\n      success: false,\n      message: \"User already exists\",\n    });\n  }\n\n  const newUser = await User.create({\n    username,\n    email,\n    password,\n  });\n\n  res.json({\n    success: true,\n    message: \"User created\",\n    user: newUser.toJSON(),\n  });\n});\n\nexport default router;\n"],"names":[],"mappings":";;;AAGA,MAAM,MAAM,GAAW,MAAM,GAAG;AAEhC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,GAAY,EAAE,GAAa,KAAI;IACrD,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAE/C,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ,EAAE;QACpC,OAAO,GAAG,CAAC,IAAI,CAAC;AACd,YAAA,OAAO,EAAE,KAAK;AACd,YAAA,OAAO,EAAE,2CAA2C;AACrD,SAAA,CAAC,CAAC;KACJ;IAED,MAAM,SAAS,GACb,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,MAAM,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAExE,IAAI,SAAS,EAAE;QACb,OAAO,GAAG,CAAC,IAAI,CAAC;AACd,YAAA,OAAO,EAAE,KAAK;AACd,YAAA,OAAO,EAAE,qBAAqB;AAC/B,SAAA,CAAC,CAAC;KACJ;AAED,IAAA,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;QAChC,QAAQ;QACR,KAAK;QACL,QAAQ;AACT,KAAA,CAAC,CAAC;IAEH,GAAG,CAAC,IAAI,CAAC;AACP,QAAA,OAAO,EAAE,IAAI;AACb,QAAA,OAAO,EAAE,cAAc;AACvB,QAAA,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE;AACvB,KAAA,CAAC,CAAC;AACL,CAAC,CAAC;;;;"}