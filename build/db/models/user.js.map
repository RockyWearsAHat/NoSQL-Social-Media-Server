{"version":3,"file":"user.js","sources":["../../../db/models/user.ts"],"sourcesContent":["import mongoose, { Schema, Document, ObjectId } from \"mongoose\";\nimport bcrypt from \"bcrypt\";\nimport { validateEmail } from \"../../helpers/validateEmail\";\nimport Thought, { IThought } from \"./thoughts\";\nimport { IReaction } from \"./reactions\";\n\nexport interface IUser extends Document {\n  username: string;\n  email: string;\n  password: string;\n  thoughts: ObjectId[];\n  friends: ObjectId[];\n  comparePassword: (password: string) => Promise<boolean>;\n  toJSON: () => Partial<IUser>;\n  populateFriends: () => Promise<IUser>;\n  populateThoughts: () => Promise<IUser>;\n  friendCount: () => number;\n}\n\nconst userSchema = new Schema<IUser>({\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n    trim: true,\n  },\n  email: {\n    type: String,\n    required: true,\n    unique: true,\n    validate: [validateEmail, \"Invalid email\"],\n  },\n  password: {\n    type: String,\n    required: true,\n  },\n  thoughts: [\n    {\n      type: Schema.Types.ObjectId,\n      ref: \"Thought\",\n      default: [],\n      required: true,\n    },\n  ],\n  friends: [\n    {\n      type: Schema.Types.ObjectId,\n      ref: \"User\",\n      default: [],\n      required: true,\n    },\n  ],\n});\n\nuserSchema.pre(\"save\", async function (next) {\n  if (!this.isModified(\"password\")) return next();\n\n  const salt = await bcrypt.genSalt(10);\n  this.password = await bcrypt.hash(this.password, salt);\n  return next();\n});\n\nuserSchema.methods.comparePassword = async function (\n  password: string\n): Promise<boolean> {\n  return await bcrypt.compare(password, this.password);\n};\n\nuserSchema.methods.toJSON = function (): Partial<IUser> {\n  let userObject = this.toObject();\n  //Remove unnecessary data\n  delete userObject.password;\n  delete userObject.__v;\n\n  return userObject;\n};\n\nuserSchema.methods.populateFriends = async function (): Promise<IUser> {\n  return await this.populate(\"friends\", \"_id username\");\n};\n\nuserSchema.methods.populateThoughts = async function (): Promise<IUser> {\n  const thoughtsPopulated = await this.populate({\n    path: \"thoughts\",\n    select: \"_id thoughtText createdAt reactions\",\n    transform: (doc: IThought) => {\n      if (doc !== null) {\n        return doc.toJSON();\n      }\n    },\n  });\n\n  const thoughtsAndReactionsPopulated = await thoughtsPopulated.populate({\n    path: \"thoughts.reactions\",\n    select: \"-__v\",\n    transform: (doc: IReaction) => {\n      if (doc !== null) {\n        return doc.toJSON();\n      }\n    },\n  });\n\n  return thoughtsAndReactionsPopulated;\n};\n\n// This syntax is interesting, I don't like the User.get(\"friendCount\") I'd rather have a function\n// to call on the user that returns friend count, just personal preference ig?\n// userSchema.virtual(\"friendCount\").get(function (this: IUser) {\n//   return this.thoughts.length;\n// });\n\nuserSchema.methods.friendCount = function (): number {\n  return this.friends.length;\n};\n\nuserSchema.pre(\n  \"deleteOne\",\n  { document: true, query: false },\n  async function (next) {\n    const user = await User.findOne({ username: this.username });\n    if (!user) return next();\n\n    user.thoughts.forEach(async (thought) => {\n      await Thought.findByIdAndDelete(thought);\n    });\n\n    await user.save();\n\n    return next();\n  }\n);\n\nconst User = mongoose.model<IUser>(\"User\", userSchema);\n\nexport default User;\n"],"names":[],"mappings":";;;;;AAmBA,MAAM,UAAU,GAAG,IAAI,MAAM,CAAQ;AACnC,IAAA,QAAQ,EAAE;AACR,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,IAAI,EAAE,IAAI;AACX,KAAA;AACD,IAAA,KAAK,EAAE;AACL,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,QAAQ,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC;AAC3C,KAAA;AACD,IAAA,QAAQ,EAAE;AACR,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,QAAQ,EAAE,IAAI;AACf,KAAA;AACD,IAAA,QAAQ,EAAE;AACR,QAAA;AACE,YAAA,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;AAC3B,YAAA,GAAG,EAAE,SAAS;AACd,YAAA,OAAO,EAAE,EAAE;AACX,YAAA,QAAQ,EAAE,IAAI;AACf,SAAA;AACF,KAAA;AACD,IAAA,OAAO,EAAE;AACP,QAAA;AACE,YAAA,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;AAC3B,YAAA,GAAG,EAAE,MAAM;AACX,YAAA,OAAO,EAAE,EAAE;AACX,YAAA,QAAQ,EAAE,IAAI;AACf,SAAA;AACF,KAAA;AACF,CAAA,CAAC,CAAC;AAEH,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,gBAAgB,IAAI,EAAA;AACzC,IAAA,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;QAAE,OAAO,IAAI,EAAE,CAAC;IAEhD,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACtC,IAAA,IAAI,CAAC,QAAQ,GAAG,MAAM,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACvD,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,OAAO,CAAC,eAAe,GAAG,gBACnC,QAAgB,EAAA;IAEhB,OAAO,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvD,CAAC,CAAC;AAEF,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,YAAA;AAC1B,IAAA,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;;IAEjC,OAAO,UAAU,CAAC,QAAQ,CAAC;IAC3B,OAAO,UAAU,CAAC,GAAG,CAAC;AAEtB,IAAA,OAAO,UAAU,CAAC;AACpB,CAAC,CAAC;AAEF,UAAU,CAAC,OAAO,CAAC,eAAe,GAAG,kBAAK;IACxC,OAAO,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;AACxD,CAAC,CAAC;AAEF,UAAU,CAAC,OAAO,CAAC,gBAAgB,GAAG,kBAAK;AACzC,IAAA,MAAM,iBAAiB,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC;AAC5C,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,qCAAqC;AAC7C,QAAA,SAAS,EAAE,CAAC,GAAa,KAAI;AAC3B,YAAA,IAAI,GAAG,KAAK,IAAI,EAAE;AAChB,gBAAA,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;aACrB;SACF;AACF,KAAA,CAAC,CAAC;AAEH,IAAA,MAAM,6BAA6B,GAAG,MAAM,iBAAiB,CAAC,QAAQ,CAAC;AACrE,QAAA,IAAI,EAAE,oBAAoB;AAC1B,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,SAAS,EAAE,CAAC,GAAc,KAAI;AAC5B,YAAA,IAAI,GAAG,KAAK,IAAI,EAAE;AAChB,gBAAA,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;aACrB;SACF;AACF,KAAA,CAAC,CAAC;AAEH,IAAA,OAAO,6BAA6B,CAAC;AACvC,CAAC,CAAC;AAEF;AACA;AACA;AACA;AACA;AAEA,UAAU,CAAC,OAAO,CAAC,WAAW,GAAG,YAAA;AAC/B,IAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AAC7B,CAAC,CAAC;AAEF,UAAU,CAAC,GAAG,CACZ,WAAW,EACX,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAChC,gBAAgB,IAAI,EAAA;AAClB,IAAA,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC7D,IAAA,IAAI,CAAC,IAAI;QAAE,OAAO,IAAI,EAAE,CAAC;IAEzB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,OAAO,KAAI;AACtC,QAAA,MAAM,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;AAC3C,KAAC,CAAC,CAAC;AAEH,IAAA,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC;IAElB,OAAO,IAAI,EAAE,CAAC;AAChB,CAAC,CACF,CAAC;AAEI,MAAA,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU;;;;"}